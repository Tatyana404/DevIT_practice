version: '3.9'
services:
  node:
    image: node:14
    restart: on-failure
    ports:
      - 80:80
      - 9229:9229
    volumes:
      - ./src:/home/node/src
    depends_on:
      - mysql
      - mongo
    links:
      - 'mysql:db-mysql'
      - 'mongo:db-mongo'
  mysql:
    image: mysql:latest
    restart: on-failure
    environment:
      MYSQL_USER: $MYSQL_USER
      MYSQL_PASSWORD: $MYSQL_PASSWORD
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
  phpmyadmin:
    image: phpmyadmin
    restart: on-failure
    ports:
      - 8080:80
    environment:
      PMA_USER: $PMA_USER
      PMA_PASSWORD: $PMA_PASSWORD
      PMA_HOST: $PMA_HOST
  mongo:
    image: mongo
    restart: on-failure
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_INITDB_ROOT_USERNAME
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_INITDB_ROOT_PASSWORD
  mongo-express:
    image: mongo-express
    restart: on-failure
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: $ME_CONFIG_MONGODB_ADMINUSERNAME
      ME_CONFIG_MONGODB_ADMINPASSWORD: $ME_CONFIG_MONGODB_ADMINPASSWORD
# Структура файлов
# .
# ..
# ./docker
# ./src
# ./.env.example
# ./docker-compose.yml
# ./Readme.md
# Сервисы
# node:14 - должна быть прокинута папка ./src и порты 80, 9229
# mysql:latest - сервис node должен иметь к ней доступ по домену db-mysql
# phpmyadmin - настроенный на работу с mysql сервисом
# mongo:latest - сервис node должен иметь к ней доступ по домену db-mongo
# mongo-express - настроенный на работу с mongo сервисом
